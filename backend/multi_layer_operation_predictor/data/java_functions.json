{
    "addition": "public static int addition(int a, int b) {\n    return a + b;\n}",
    "subtraction": "public static int subtraction(int a, int b) {\n    return a - b;\n}",
    "multiplication": "public static int multiplication(int a, int b) {\n    return a * b;\n}",
    "division": "public static double division(double a, double b) {\n    return a / b;\n}",
    "factorial": "public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}",
    "square": "public static int square(int x) {\n    return x * x;\n}",
    "squareRoot": "public static double squareRoot(double x) {\n    return Math.sqrt(x);\n}",
    "power": "public static double power(double x, double y) {\n    return Math.pow(x, y);\n}",
    "modulus": "public static int modulus(int a, int b) {\n    return a % b;\n}",
    "absolute": "public static double absolute(double x) {\n    return Math.abs(x);\n}",
    "maximum": "public static int maximum(int a, int b) {\n    return Math.max(a, b);\n}",
    "minimum": "public static int minimum(int a, int b) {\n    return Math.min(a, b);\n}",
    "average": "public static double average(int[] arr) {\n    int sum = 0;\n    for (int num : arr) sum += num;\n    return (double) sum / arr.length;\n}",
    "sum": "public static int sum(int[] arr) {\n    int sum = 0;\n    for (int num : arr) sum += num;\n    return sum;\n}",
    "fibonacci": "public static int fibonacci(int n) {\n    if (n <= 1) return n;\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}",
    "gcd": "public static int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}",
    "lcm": "public static int lcm(int a, int b) {\n    return (a * b) / gcd(a, b);\n}",
    "isPrime": "public static boolean isPrime(int n) {\n    if (n <= 1) return false;\n    for (int i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}"
}
